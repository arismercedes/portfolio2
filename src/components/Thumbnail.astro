---
interface Props {
    thumbnailNumber: string;
    imgSrc: string;
    imgTitle: string;
    imgType: string;
}

const { imgSrc, imgTitle = "Title", imgType = "Type" } = Astro.props
---
<div data-index="" class={`thumbnail grid relative overflow-hidden hover_tgt`}>
    <img class="object-cover w-full h-full" src={imgSrc}/>
    <div class="bg-cyan-500 absolute w-full h-full text-center grid slide">
        <div class="self-center text-white">
            <p class="uppercase font-semibold text-2xl">{imgTitle}</p>
            <p class="text-lg">{imgType}</p>
        </div>  
    </div>

    
</div>

<style>
    .thumbnail {
        border-radius: 6px;
    }
    .hover_tgt:hover .slide {
        top: 0;
        opacity: 1;
    }
    .slide {
        top: 50%;
        opacity: 0;
        width: 100%;
        height: 100%;
        transition: all 0.7s; 
    }
    @media screen and (min-width: 1024px) {
        .thumbnail-container {
            display: flex;
            flex-flow: column wrap;
            width: 600px;
            height: 620px;
            align-content: center;
        }
        .thumbnail {
            max-width: 300px;
            height: 250px;
        }
        .thumbnail:nth-child(6){
            justify-self: stretch;
        }
        .thumbnail:nth-child(3){
            height: 285px;
        }
        .thumbnail:nth-child(4){
            height: 240px;
        }
        .thumbnail:nth-child(2), .thumbnail:nth-child(6){
            height: 275px;
        }
    }
</style>

<!-- <script>
import { isRenderTemplateResult } from "astro/dist/runtime/server/render/astro";


    const test = document.querySelectorAll(".hover_tgt");
    const lightbox = document.querySelector("#lightbox");
    const closeBtn = document.querySelector(".closeBtn");
    let isOpen = false;
    


    function openImg(e) {
        let index = e.currentTarget.dataset.index;
        let item = document.querySelector(`#lightbox div[data-index="${index}"]`);

        item.classList.toggle("hidden");
        lightbox.classList.toggle("hidden");
        isOpen = true;

        console.log(index);
        console.log(item);
    }
    function closeLightbox() {
        lightbox.classList.toggle("hidden")
        isOpen = false;

    }
    test.forEach((item) => {
            item.addEventListener("click", openImg)
    })
    closeBtn.addEventListener("click", closeLightbox)
    document.addEventListener('keydown', (event) => {
        
        if (event.key === 'Escape') {
            const isNotCombinedKey = !(event.ctrlKey || event.altKey || event.shiftKey);
            if (isNotCombinedKey) {
              if (isOpen === true) {
                closeLightbox();
              }
            }
        }
    });
</script> -->